"""
Django settings for NewsPaper project.

Generated by 'django-admin startproject' using Django 3.1.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from django.contrib.auth.decorators import login_required

# Build paths inside the project like this: BASE_DIR / 'subdir'.


BASE_DIR = Path(__file__).resolve().parent.parent

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'iz89n@i1_@4=mh8t%aaqvd2j#-i3h(dv$rc5jiv9fcpxfj9u^g'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']  # локальный адрес сервера

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #'news',
    'news.apps.NewsConfig',  # переопределяем путь
    'django_filters',
    'django.contrib.sites',
    'django.contrib.flatpages',

    "django_apscheduler",

    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',

]
SITE_ID = 1


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware'

]

ROOT_URLCONF = 'NewsPaper.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],  # искать шаблоны в соответствующей дирректории
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / "static"]

LOGIN_URL = login_required(login_url='/accounts/login/')
LOGIN_REDIRECT_URL = '/news/search/'
ACCOUNT_EMAIL_REQUIRED = True  # требуется адрес почты для учетной записи
ACCOUNT_UNIQUE_EMAIL = True # почта должна быть уникальной
ACCOUNT_USERNAME_REQUIRED = False  # требуется имя пользователя учетной записи
ACCOUNT_AUTHENTICATION_METHOD = 'email'  # метод аутентификации аккаунта
ACCOUNT_EMAIL_VERIFICATION = 'optional'  # подтверждение почты аккаунта

EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 465
EMAIL_HOST_USER = 'bobby.loner27@gmail.com'
EMAIL_HOST_PASSWORD = 'green7688'
EMAIL_USE_TLS = False
EMAIL_USE_SSL = True
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

MANAGERS = [
    ('Viki', 'viki49661@gmail.com'),
]
SERVER_EMAIL = 'bobby.loner27@gmail.ru'

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]


# Строка формата для отображения отметок времени выполнения на сайте администратора Django. Значение по умолчанию
# просто добавляет секунды к стандартному формату Django, который полезен для отображения временных меток
# для заданий, которые запланированы для выполнения с интервалами менее одной минуты.
#
# См. Https://docs.djangoproject.com/en/dev/ref/settings/#datetime-format для форматной строки
# подробностей синтаксиса.
APSCHEDULER_DATETIME_FORMAT  =  "N j, Y, f: s a"

# Максимальное время выполнения, разрешенное для заданий, которые запускаются вручную через сайт администратора Django, что
# предотвращает истечение времени ожидания HTTP-запросов админского сайта.
#
# Более длительные задания, вероятно, следует передать библиотеке обработки фоновых задач
#, которая вместо этого поддерживает несколько фоновых рабочих процессов (например, Dramatiq, Celery, Django-RQ,
# и т. Д. См .: https://djangopackages.org/grids/g / worker-queues-tasks / для популярных вариантов).
APSCHEDULER_RUN_NOW_TIMEOUT  =  25   # секунд

WSGI_APPLICATION = 'NewsPaper.wsgi.application'


CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache_files'),
        'TIMEOUT': 300,
    }
}